Digital assignment 2
Name:DARISI.ANANTHA LOHITH
Reg.no: 22BCE1777 
Write a cprogram to get the employee information name,age,position and Date of joining. Print the employee list based on Alphabaetical order. Display the order of the employees based on date of joining.
SAMPLE INPUT MODEL:
	    Enter the number of employees: 3
Enter details of employee 1:
Name: Jane
Age: 34
Position: HR
Date of joining (dd/mm/yyyy): 10/2/2000
Enter details of employee 2:
Name: Amie
Age: 23
Position: Sales
Date of joining (dd/mm/yyyy): 12/03/2004
Enter details of employee 3:
Name: Balu
Age: 45
Position: Scurity
Date of joining (dd/mm/yyyy): 1/1/1998
SAMPLE OUTPUT MODEL:
Employee List sorted by name:
Name: Amie
Age: 23
Position: Sales
Date of Joining: 12/03/2004
Name: Balu
Age: 45
Position: Security
Date of Joining: 1/1/1998
Name: Jane
Age: 34
Position: HR
Date of Joining: 10/2/2000
Employee List sorted by date of joining:
Name: Balu
Age: 45
Position: Security
Date of Joining: 1/1/1998
Name: Jane
Age: 34
Position: HR
Date of Joining: 10/2/2000
Name: Amie
Age: 23
Position: Sales
Date of Joining: 12/03/2004
 PUBLIC TEST CASE:
3
Jane
34
HR
10/2/2000
Amie
23
Sales
12/03/2004
Balu
45
Security
1/1/1998
OUTPUT:
Employee List sorted by name:
Amie
23
Sales
12/03/2004
Balu
45
Security
1/1/1998
Jane
34
HR
10/2/2000
Employee List sorted by date of joining:
Balu
Jane
Amie

Answer: 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX_EMPLOYEES 100
#define MAX_NAME_LENGTH 50
#define MAX_POSITION_LENGTH 50
#define DATE_LENGTH 11
struct Employee {
    char name[MAX_NAME_LENGTH];
    int age;
    char position[MAX_POSITION_LENGTH];
    char date[DATE_LENGTH];
};
int compareByName(const void *a, const void *b) {
    const struct Employee *ea = (const struct Employee *)a;
    const struct Employee *eb = (const struct Employee *)b;
    return strcmp(ea->name, eb->name);
}
int compareByDate(const void *a, const void *b) {
    const struct Employee *ea = (const struct Employee *)a;
    const struct Employee *eb = (const struct Employee *)b;
    return strcmp(ea->date, eb->date);
}
int main() {
    int n, i;
    struct Employee employees[MAX_EMPLOYEES];
printf("Enter the number of employees: ");
    scanf("%d", &n);
    getchar(); // consume newline character
 for (i = 0; i < n; i++) {
        printf("Enter details of employee %d:\n", i+1); printf("Name: ");
        fgets(employees[i].name, MAX_NAME_LENGTH, stdin);
        employees[i].name[strcspn(employees[i].name, "\n")] = '\0'; 
        printf("Age: ");
        scanf("%d", &employees[i].age);
        getchar(); 
        printf("Position: ");
        fgets(employees[i].position, MAX_POSITION_LENGTH, stdin);
employees[i].position[strcspn(employees[i].position, "\n")] = '\0'; 
        printf("Date of joining (dd/mm/yyyy): ");
        fgets(employees[i].date, DATE_LENGTH, stdin);
        employees[i].date[strcspn(employees[i].date, "\n")] = '\0'; 
    }
qsort(employees, n, sizeof(struct Employee), compareByName);
    printf("\nEmployee List sorted by name:\n\n");
    for (i = 0; i < n; i++) {
        printf("Name: %s\n", employees[i].name);
        printf("Age: %d\n", employees[i].age);
        printf("Position: %s\n", employees[i].position);
        printf("Date of Joining: %s\n\n", employees[i].date);
    }
 qsort(employees, n, sizeof(struct Employee), compareByDate);
    printf("\nEmployee List sorted by date of joining:\n\n");
    for (i = 0; i < n; i++) {
        printf("Name: %s\n", employees[i].name);
    }
    return 0;
}

